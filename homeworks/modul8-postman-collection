{
	"info": {
		"_postman_id": "b56c2f93-d3e0-425b-ae14-ed6cececedeb",
		"name": "Modul 8 - homework - MG",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "posts - GET all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2a6c6e68-acb0-41ed-b71c-64fc99fdb7c3",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"dolorem eum magni eos aperiam quia\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url2}}/posts",
					"host": [
						"{{url2}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "posts - GET id=6",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0ed62c44-2e1b-49f9-89e1-93c6847bebe1",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"ut aspernatur corporis harum\");\r",
							"});\r",
							"pm.test(\"Body - Checking userId\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.userId).to.eql(1);\r",
							"});\r",
							"pm.test(\"Body - Checking post id\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.id).to.eql(6);\r",
							"});\r",
							"pm.test(\"Body - Checking title\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.title).to.eql(\"dolorem eum magni eos aperiam quia\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url2}}/posts/6",
					"host": [
						"{{url2}}"
					],
					"path": [
						"posts",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "posts - POST create new",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b2cfe5fb-6784-4cdd-81ad-76550700e35c",
						"exec": [
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Body - Checking post id\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.id).to.eql(101);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n    \"userId\": 1,\r\n    \"id\": 152,\r\n    \"title\": \"title 605\",\r\n    \"body\": \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\"\r\n    }\r\n]"
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "posts - PUT update id=6",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b5ed4ac2-c866-4557-b55f-3f5238d04c4f",
						"exec": [
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body - Checking post id\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.id).to.eql(6);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n    \"userId\": 1,\r\n    \"id\": 654,\r\n    \"title\": \"random title\",\r\n    \"body\": \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\"\r\n    }\r\n]"
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/6",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "posts - DELETE id=6",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4eb6073b-f453-4944-8121-bec846a8da60",
						"exec": [
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body - Checking empty response\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson).to.be.any;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/6",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "comments - GET all",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b83b1fae-6789-4772-9062-3fc9607e3141",
						"exec": [
							"pm.test(\"Response time is less than 100ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(100);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"laudantium enim quasi est quidem\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/comments",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "comments - GET id=10",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ec0d438e-e63a-4c09-87ea-eb30b36b16ee",
						"exec": [
							"pm.test(\"Response time is less than 100ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(100);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"voluptate iusto quis nobis\");\r",
							"});\r",
							"pm.test(\"Body - Checking postId\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.postId).to.eql(2);\r",
							"});\r",
							"pm.test(\"Body - Checking comment id\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.id).to.eql(10);\r",
							"});\r",
							"pm.test(\"Body - Checking name\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.name).to.eql(\"eaque et deleniti atque tenetur ut quo ut\");\r",
							"});\r",
							"pm.test(\"Body - Checking email\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.email).to.eql(\"Carmen_Keeling@caroline.name\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/comments/10",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"comments",
						"10"
					]
				}
			},
			"response": []
		},
		{
			"name": "comments - POST create new",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7572067a-f9bf-4c14-babe-841f2e148946",
						"exec": [
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Body - Checking comment id\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.id).to.eql(501);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n    \"postId\": 2,\r\n    \"id\": 1020,\r\n    \"name\": \"eaque et deleniti atque tenetur ut quo ut\",\r\n    \"email\": \"test1a@yopmail.com\",\r\n    \"body\": \"voluptate iusto quis nobis reprehenderit ipsum amet nulla\\nquia quas dolores velit et non\\naut quia necessitatibus\\nnostrum quaerat nulla et accusamus nisi facilis\"\r\n    }\r\n]"
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/comments",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "comments - PUT update id=10",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "69401381-887b-45ab-a121-3f21a3a1b848",
						"exec": [
							"pm.test(\"Response time is less than 350ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(350);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body - Checking comment id\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.id).to.eql(10);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n    \"postId\": 2,\r\n    \"id\": 10,\r\n    \"name\": \"random title\",\r\n    \"email\": \"Carmen_Keeling@caroline.name\",\r\n    \"body\": \"voluptate iusto quis nobis reprehenderit ipsum amet nulla\\nquia quas dolores velit et non\\naut quia necessitatibus\\nnostrum quaerat nulla et accusamus nisi facilis\"\r\n    }\r\n]"
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/comments/10",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"comments",
						"10"
					]
				}
			},
			"response": []
		},
		{
			"name": "comments - DELETE id=10",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fcf47953-c8b2-4c83-bce0-73868ced57aa",
						"exec": [
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body - Checking empty response\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson).to.be.any;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/comments/10",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"comments",
						"10"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6dc4130c-6c09-448e-b326-b168f8490f49",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d7d149f2-d51e-48cd-a00d-e31cdcf44c83",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "31efa3d8-aef9-4325-8249-4adca06c3371",
			"key": "url2",
			"value": "https://jsonplaceholder.typicode.com"
		}
	],
	"protocolProfileBehavior": {}
}